@startuml Administar Logros
actor "Client" as Administrador 
boundary boundary
control control
collections Firestore as Usuarios 
Administrador->boundary: gestionarLogros()
activate boundary
boundary->control:GestionarLogros()
activate control
control->Usuarios:getLogros()
control<<--Usuarios
deactivate Usuarios
boundary<<--control
deactivate control
Administrador<<--boundary
deactivate boundary

Administrador->boundary: enviar(Datos)
activate boundary
boundary->control:Gestiona(datos)
activate control
control->Usuarios:modificar(Datos)
control<<--Usuarios
deactivate Usuarios
boundary<<--control
deactivate control
Administrador<<--boundary
deactivate boundary


opt Crear Logro
    Administrador->boundary: CrearLogro()
    activate boundary
    boundary->control:CrearLogro()
    activate control
    boundary<-control:datos=obtenerDatos()
    activate boundary
    boundary-->>control
    deactivate boundary
    control->Usuarios:CrearLogro()
    activate Usuarios
    control<<--Usuarios
    deactivate Usuarios
    boundary <<-- control
    deactivate control
    Administrador<<--boundary
    deactivate boundary
end


opt consultar Logro
    Administrador->boundary: conusltarLogro(Logro)
    activate boundary
    boundary->control:conusltarLogro(Logro)
    activate control
    control->Usuarios:datos=ConsultarLogro(Logro)
    activate Usuarios
    control<<--Usuarios
    deactivate Usuarios
    boundary <- control:mostarDatos(datos)
    activate boundary
    boundary-->>control
    deactivate boundary
    deactivate control
    deactivate boundary
end


opt eliminar Logro
    Administrador->boundary: EliminarLogro(Logro)
    activate boundary
    boundary->control:EliminarLogro(Logro)
    activate control
    boundary<-control:ConfirmarEliminar()
    activate boundary
    boundary-->>control
    deactivate boundary
    control->Usuarios:Eliminar(Logro)
    activate Usuarios
    control<<--Usuarios
    deactivate Usuarios
    boundary <<-- control
    deactivate control
    Administrador<<--boundary
    deactivate boundary
end


@enduml